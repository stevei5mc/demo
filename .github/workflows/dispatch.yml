name: dispatch
on:
  workflow_dispatch:
    inputs:
      build-plugin:
        description: 'Build plugin'
        required: false
        default: true
        type: boolean
      build-Docusaurus:
        description: 'Build docusaurus'
        required: false
        default: true
        type: boolean
      # deploy-gitHub-pages:
      #   description: 'Deploy gitHub pages'
      #   required: false
      #   default: false
      #   type: boolean
      # PR_Approve:
      #   description: 'PR Approve'
      #   required: false
      #   default: false
      #   type: boolean
      additional-functions:
        description: "Additional functions"
        required: false
        default: 'warning'
        type: None
        options:
        - None
        - PR Approve
        - Deploy gitHub pages
        - PR Approve and Deploy gitHub pages
      PR_ID:
        description: 'PR Approve ID'
        required: false

jobs:
  initialize:
    runs-on: ubuntu-latest
    outputs:
      repo_name: ${{ steps.get_info.outputs.repo_name }}
      artifact_name: ${{ steps.get_info.outputs.repo_name }}-Dispatch-Build_${{ github.run_number }}
      additional-functions: ${{ steps.get_info.outputs.additional-functions }}
      PR_ID: ${{ steps.get_info.outputs.PR_ID }}
      url: ${{ steps.get_info.outputs.url }}
    steps:
    - name: 输入参数
      run: |
        echo Build plugin : ${{ inputs.build-plugin }}
        echo Build docusaurus : ${{ inputs.build-Docusaurus }}
        echo Deploy additional functionss : ${{ inputs.additional-functions }}
        echo PR Approve ID : ${{ inputs.PR_ID }}
    - name: 获取信息
      id: get_info
      run: |
        echo "repo_name=${GITHUB_REPOSITORY/${{ github.repository_owner }}\//}" >> $GITHUB_OUTPUT
        echo "additional-functions=${{ inputs.additional-functions }}" >> $GITHUB_OUTPUT
        echo "PR_ID=${{ inputs.PR_ID }}" >> $GITHUB_OUTPUT

  build-plugin:
    if: ${{ inputs.build-plugin }}
    name: Build plugin
    needs: initialize
    runs-on: ubuntu-latest
    steps:
    - name: 拉取代码
      uses: actions/checkout@v4
      with:
        submodules: true
    - name: 拉取代码(批准PR专用)
      if: needs.initialize.outputs.PR_Approve == 'PR Approve' || needs.initialize.outputs.PR_Approve == 'PR Approve and Deploy gitHub pages'
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
          ls -la
          gh pr checkout ${{ inputs.PR_ID }}
          ls -la
    - name: 安装java8
      uses: actions/setup-java@v4
      with:
        java-version: '8'
        distribution: 'temurin'
        # cache: maven
    # - name: 构建
    #   run: |
    #     cd plugin-body
    #     mvn -B package --file pom.xml
    #     mkdir staging
    #     cp target/*.jar staging
    #     cd ../
    # - name: 上传构建
    #   uses: actions/upload-artifact@v4
    #   with:
    #     name: ${{ needs.initialize.outputs.artifact_name }}
    #     path: plugin-body/staging

  build-Docusaurus:
    if: ${{ inputs.build-Docusaurus }}
    name: Build docusaurus
    needs: initialize
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: 拉取代码(批准PR专用)
        if: needs.initialize.outputs.PR_Approve == 'PR Approve' || needs.initialize.outputs.PR_Approve == 'PR Approve and Deploy gitHub pages'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls -la
          gh pr checkout ${{ inputs.PR_ID }}
          ls -la
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          # cache: npm
      # - name: 构建
      #     cd Docusaurus
      #     npm ci
      #     npm run build
      #     cd ../
      #     mkdir build
      #     cp -r ./Docusaurus/build/* build
      # - name: 上传构建
      #   uses: actions/upload-pages-artifact@v3
      #   with:
      #     path: build

  deploy-gitHub-pages:
    if: needs.initialize.outputs.PR_Approve == 'Deploy gitHub pages' || needs.initialize.outputs.PR_Approve == 'PR Approve and Deploy gitHub pages'
    name: Deploy gitHub pages
    needs: build-Docusaurus
    # 给予 GITHUB_TOKEN 进行 Pages 部署所必须的权限
    permissions:
      pages: write # 以部署到 Pages
      id-token: write # 以验证部署来自恰当的源
    # 部署到 Github Pages 环境
    # environment:
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # - name: 部署到 GitHub Pages
      #   id: deployment
      #   uses: actions/deploy-pages@v4
      - run: pwd

  PR-Approve:
    if: (needs.initialize.outputs.PR_Approve == 'PR Approve' || needs.initialize.outputs.PR_Approve == 'PR Approve and Deploy gitHub pages') && ( || failure())
    name: PR Approve
    needs: 
    - build-Docusaurus
    - build-plugin
    runs-on: ubuntu-latest
    steps:
      - name: 拉取代码
        uses: actions/checkout@v4
        with:
          submodules: true
      # - name: 批准PR
      #   uses: hmarr/auto-approve-action@v4.0.0
      #   with:
      #     pull-request-number: ${{ inputs.PR_ID }}
      #     review-message: |
      #       构建成功，本PR获得批准合并。如果有新的提交则自动取消本次批准！
      #       非常感谢您对本次作出的贡献。

      #       The build was successful, and this PR was approved for merging. 
      #       If there is a new submission, this approval will be automatically canceled.
      #       Thank you very much for your contribution to this event。

      #       ${{ needs.initialize.outputs.url }}
      - name: PR review message
        if: (needs.initialize.outputs.PR_Approve == 'PR Approve' || needs.initialize.outputs.PR_Approve == 'PR Approve and Deploy gitHub pages') && failure()
        uses: miry/prcomment@v0.1.3
        with:
          msg: |
            构建失败，请查看构建获取失败原因：
            Build failed, please check the build to obtain the reason for the failure:

            ${{ steps.get_info.outputs.url }}
          pr: ${{ inputs.PR_ID }}
          token: ${{ secrets.GITHUB_TOKEN }}